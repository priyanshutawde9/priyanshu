from rest_framework.decorators import api_view,permission_classes
from jio.models import Mobile
from rest_framework.response import Response
from django.contrib.auth import authenticate
from rest_framework.permissions import IsAuthenticated
from .serializers import MobileSerializer, MobileUserSerializer
from django.http import JsonResponse
from django.contrib.auth.models import User
from rest_framework import status
from rest_framework_simplejwt.tokens import RefreshToken
from .models import Mobile
# Create your views here.

@api_view(['GET'])
def getData(request):
    mobiles = Mobile.objects.all()
    serializer = MobileSerializer(mobiles, many=True)
    return Response(serializer.data)

@api_view(['POST'])
@permission_classes([IsAuthenticated])
def addMobile(request):
    serializer = MobileSerializer(data=request.data)
    if serializer.is_valid():
        serializer.save()
        return Response(serializer.data)
    else:
        return Response(serializer.errors)

 
def get_tokens_for_user(user):
    refresh = RefreshToken.for_user(user)

    return {
        'refresh': str(refresh),
        'access': str(refresh.access_token),
    }

@api_view(['POST'])
def login_user(request):
        if request.method == 'POST':
           print(request)
           req_data = request.data 
           print(req_data)
           serializer = MobileUserSerializer(data=req_data)
           if serializer.is_valid(raise_exception=True):
             username = request.data.get('username')
             email = request.data.get('email') 
             password = request.data.get('password')


             mobileuser = authenticate(request, username=username,email=email, password=password)

             if mobileuser:  
                 token = get_tokens_for_user(mobileuser)
                 return JsonResponse({'token': token})
             else:
              return JsonResponse({'error': 'Invalid credentials'}, status=401)
           else:
            return Response(serializer.errors,status=status.HTTP_400_BAD_REQUEST)
        else:
         return JsonResponse({'error': 'user already exists'}, status=405)
    





